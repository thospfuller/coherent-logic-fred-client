<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <context:component-scan base-package="com.coherentlogic.geofred.client" />

    <bean id="observation" class="com.coherentlogic.geofred.client.core.domain.Observation" scope="prototype"/>
    <bean id="seriesData" class="com.coherentlogic.geofred.client.core.domain.SeriesData" scope="prototype"/>
    <bean id="seriesGroup" class="com.coherentlogic.geofred.client.core.domain.SeriesGroup" scope="prototype"/>
    <bean id="seriesGroups" class="com.coherentlogic.geofred.client.core.domain.SeriesGroups" scope="prototype"/>
    <bean id="shapes" class="com.coherentlogic.geofred.client.core.domain.Shapes" scope="prototype"/>
    <bean id="shape" class="com.coherentlogic.geofred.client.core.domain.Shape" scope="prototype"/>

    <bean id="shapesDeserializer" class="com.coherentlogic.geofred.client.core.converters.ShapesDeserializer"/>
    <bean id="seriesGroupsDeserializer" class="com.coherentlogic.geofred.client.core.converters.SeriesGroupsDeserializer"/>

    <bean id="geoFREDGsonFactory" class="com.coherentlogic.geofred.client.core.factories.GsonFactory">
        <constructor-arg name="typeAdapterMap">
            <util:map>
                <entry key="com.coherentlogic.geofred.client.core.domain.Shapes" value-ref="shapesDeserializer"/>
                <entry key="com.coherentlogic.geofred.client.core.domain.SeriesGroups" value-ref="seriesGroupsDeserializer"/>
            </util:map>
        </constructor-arg>
    </bean>

    <bean id="geoFREDGson" factory-bean="geoFREDGsonFactory" factory-method="getInstance" />

    <bean id="geoFREDRestTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean id="geoFREDGsonHttpMessageConverter"
                 class="org.springframework.http.converter.json.GsonHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <util:list>
                            <value>#{T(org.springframework.http.MediaType).APPLICATION_JSON}</value>
                            <value>#{T(org.springframework.http.MediaType).APPLICATION_JSON_UTF8}</value>
                        </util:list>
                    </property>
                    <property name="gson" ref="geoFREDGson"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- bean id="fredDateConverter" class="com.thoughtworks.xstream.converters.basic.DateConverter">
        <constructor-arg name="defaultEraFormat" value="#{null}"/>
        <constructor-arg name="defaultFormat" value="yyyy-MM-dd"/>
        <constructor-arg name="acceptableFormats">
            <list>
                <value>yyyy-MM-dd</value>
            </list>
        </constructor-arg>
        <constructor-arg name="locale" value="#{ T(java.util.Locale).ENGLISH}"/>
        <constructor-arg name="timeZone" value="#{ T(java.util.TimeZone).getTimeZone('GMT-6')}"/>
        <constructor-arg name="lenient" value="false"/>
    </bean>

    <bean id="fredOutputTypeConverter" class="com.coherentlogic.fred.client.core.converters.OutputTypeEnumConverter">
        <constructor-arg name="type" value="com.coherentlogic.fred.client.core.domain.OutputType"/>
    </bean>

    <bean id="fredSortOrderConverter" class="com.coherentlogic.fred.client.core.converters.SortOrderEnumConverter">
        <constructor-arg name="type" value="com.coherentlogic.fred.client.core.domain.SortOrder"/>
    </bean>

    <bean id="fredOrderByEnumConverter" class="com.coherentlogic.fred.client.core.converters.OrderByEnumConverter">
        <constructor-arg name="type" value="com.coherentlogic.fred.client.core.domain.OrderBy"/>
    </bean>

    <bean id="fredFilterValueEnumConverter" class="com.coherentlogic.fred.client.core.converters.FilterValueEnumConverter">
        <constructor-arg name="type" value="com.coherentlogic.fred.client.core.domain.FilterValue"/>
    </bean>

    <bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="marshallingStrategy">
            <bean class="com.coherentlogic.coherent.data.adapter.core.xstream.CustomMarshallingStrategy"/>
        </property>
        <!// Underscores in attributes cause problems with XStream and the stream driver below
             addresses this issue - in particular see the XmlFriendlyReplacer.
          //>
        <property name="streamDriver">
            <bean class="com.thoughtworks.xstream.io.xml.XppDriver">
                <constructor-arg>
                    <bean class="com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer">
                        <constructor-arg index="0" value="_-"/>
                        <constructor-arg index="1" value="_"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="autodetectAnnotations" value="true" />
        <property name="annotatedClasses">
            <array>
                <value>com.coherentlogic.fred.client.core.domain.Sources</value>
                <value>com.coherentlogic.fred.client.core.domain.Source</value>
                <value>com.coherentlogic.fred.client.core.domain.Seriess</value>
                <value>com.coherentlogic.fred.client.core.domain.Series</value>
                <value>com.coherentlogic.fred.client.core.domain.Categories</value>
                <value>com.coherentlogic.fred.client.core.domain.Category</value>
                <value>com.coherentlogic.fred.client.core.domain.Observations</value>
                <value>com.coherentlogic.fred.client.core.domain.Observation</value>
                <value>com.coherentlogic.fred.client.core.domain.Releases</value>
                <value>com.coherentlogic.fred.client.core.domain.Release</value>
                <value>com.coherentlogic.fred.client.core.domain.VintageDates</value>
                <value>com.coherentlogic.fred.client.core.domain.VintageDate</value>
                <value>com.coherentlogic.fred.client.core.domain.ReleaseDates</value>
                <value>com.coherentlogic.fred.client.core.domain.ReleaseDate</value>
                <value>com.coherentlogic.fred.client.core.domain.Tags</value>
                <value>com.coherentlogic.fred.client.core.domain.Tag</value>
            </array>
        </property>
        <!// TODO: Consider using annotations exclusively and remove the
                   converters from here.
          //>
        <property name="converters">
            <array>
                <ref bean="fredDateConverter"/>
                <ref bean="fredOutputTypeConverter"/>
                <ref bean="fredSortOrderConverter"/>
                <ref bean="fredOrderByEnumConverter"/>
                <ref bean="fredFilterValueEnumConverter"/>
            </array>
        </property>
    </bean -->
</beans>

